name: Deploy FastAPI to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/gitdeun-ai:latest
            ${{ secrets.DOCKER_USERNAME }}/gitdeun-ai:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload compose
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "${{ secrets.EC2_TARGET_PATH }}/"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            set -euo pipefail
            mkdir -p ${{ secrets.EC2_TARGET_PATH }}/logs
            cd       ${{ secrets.EC2_TARGET_PATH }}

            # 멀티라인 .env 저장 (ENV_FILE 시크릿 사용)
            cat > ./.env <<'ENV_EOF'
            ${{ secrets.ENV_FILE }}
            ENV_EOF
            chmod 600 ./.env

            export TAG=${{ github.sha }}
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}

            echo "${{ secrets.DOCKERHUB_TOKEN }}" \
              | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # 네트워크는 compose가 관리 (사전 생성 X)
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml up -d --remove-orphans
            docker image prune -f --filter "until=168h"